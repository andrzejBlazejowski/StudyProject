<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:StudyProject.View"
                    xmlns:viewsAdd="clr-namespace:StudyProject.View.Add"
                    xmlns:viewsBL="clr-namespace:StudyProject.View.BusinessLogic"
                    xmlns:listViewModels="clr-namespace:StudyProject.ViewModels.List"
                    xmlns:blViewModels="clr-namespace:StudyProject.ViewModels.BuisnesLogic"
                    xmlns:ViewModels="clr-namespace:StudyProject.ViewModels"
                    >


    <DataTemplate DataType="{x:Type listViewModels:AllComoditiesViewModel}">
        <views:AllComoditiesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllBrandsViewModel}">
        <views:AllBrandsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllComodityCategoriesViewModel}">
        <views:AllComodityCategoriesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllDeliveryViewModel}">
        <views:AllDeliveriesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllContractorsViewModel}">
        <views:AllContractorsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllContractorTypesViewModel}">
        <views:AllContractorTypesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllCurenciesViewModel}">
        <views:AllCurenciesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllDeliveryItemsViewModel}">
        <views:AllDeliveryItemsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllDeliveryStatusesViewModel}">
        <views:AllDeliveryStatusesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllEmplyeesViewModel}">
        <views:AllEmployeesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllEmplyeeTypesViewModel}">
        <views:AllEmployeeTypesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllInvoicesViewModel}">
        <views:AllInvoicesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllInvoiceItemsViewModel}">
        <views:AllInvoiceItemsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllPaymentMethodsViewModel}">
        <views:AllPaymentMethodsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllSizeTypesViewModel}">
        <views:AllSizeTypesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllStoragesViewModel}">
        <views:AllStoragesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type listViewModels:AllWarehousesViewModel}">
        <views:AllWarehousesView/>
    </DataTemplate>



    <DataTemplate DataType="{x:Type ViewModels:AddComodityViewModel}">
        <viewsAdd:AddComodityView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddBrandViewModel}">
        <viewsAdd:AddBrandsView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddComodityCategoryViewModel}">
        <viewsAdd:AddComodityCategoryView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddDeliveryViewModel}">
        <viewsAdd:AddDeliveryView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddContractorViewModel}">
        <viewsAdd:AddContractorView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddContractorTypeViewModel}">
        <viewsAdd:AddContractorTypeView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddCurrencyViewModel}">
        <viewsAdd:AddCurrencyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddDeliveryItemViewModel}">
        <viewsAdd:AddDeliveryItemView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddDeliveryStatusViewModel}">
        <viewsAdd:AddDeliveryStatusView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddEmployeeViewModel}">
        <viewsAdd:AddEmployeeView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddEmployeeTypeViewModel}">
        <viewsAdd:AddEmployeeType/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddInvoiceItemViewModel}">
        <viewsAdd:AddInvoiceItemView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddInvoiceViewModel}">
        <viewsAdd:AddInvoiceView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddPaymentMethodViewModel}">
        <viewsAdd:AddPaymentMethodView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddSizeTypeViewModel}">
        <viewsAdd:AddSizeTypesView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddStorageViewModel}">
        <viewsAdd:AddStorageView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModels:AddWarehouseViewModel}">
        <viewsAdd:AddWarehouseView/>
    </DataTemplate>



    <DataTemplate DataType="{x:Type blViewModels:MonthlySalesReport}">
        <viewsBL:MonthlySalesReport/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type blViewModels:ComoditySalesReportVM}">
        <viewsBL:ComoditySalesReport/>
    </DataTemplate>

    <Style	TargetType="TextBox">
        <Style.Triggers>
            <Trigger  Property="Validation.HasError"  Value="true">
                <Setter  Property="ToolTip" Value="{Binding  RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ActionsTemplate">
        <ItemsControl ItemsSource="{Binding}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding Key}" Command="{Binding Path=Action}"
                            Margin="2" Padding="2"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>
    
    <DataTemplate x:Key="ClosableTabItemTemplate">

        <!--"{Binding Path=CloseCommand}"-->
        <DockPanel Width="120">
            <Button 
                Command="{Binding Path=CloseCommand}"
                Content="X"
                Cursor="Hand"
                DockPanel.Dock="Right"
                Focusable="False"
                FontFamily="Courier" 
                FontSize="9"
                FontWeight="Bold"  
                Margin="0,1,0,0"
                Padding="0"
                VerticalContentAlignment="Bottom"
                Width="16" Height="16" 
            />
            <ContentPresenter 
        Content="{Binding Path=Title}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>


    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--
    pozwala wyswietlac azakladki
-->

    <DataTemplate x:Key="TabsTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>

</ResourceDictionary>
    